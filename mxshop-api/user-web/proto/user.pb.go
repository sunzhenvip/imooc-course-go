// Code generated by protoc-gen-go.
// source: user.proto
// DO NOT EDIT!

/*
Package __proto is a generated protocol buffer package.

It is generated from these files:
	user.proto

It has these top-level messages:
	CheckPassWordInfo
	CheckResponse
	PageInfo
	MobileRequest
	IdRequest
	UserInfoResponse
	UserListResponse
	CreateUserInfo
	UpdateUserInfo
*/
package __proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "google.golang.org/protobuf/types/known/emptypb"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CheckPassWordInfo struct {
	Password          string `protobuf:"bytes,1,opt,name=password" json:"password" xml:"password" form:"password"`
	EncryptedPassword string `protobuf:"bytes,2,opt,name=encryptedPassword" json:"encryptedPassword" xml:"encryptedPassword" form:"encryptedPassword"`
}

func (m *CheckPassWordInfo) Reset()                    { *m = CheckPassWordInfo{} }
func (m *CheckPassWordInfo) String() string            { return proto.CompactTextString(m) }
func (*CheckPassWordInfo) ProtoMessage()               {}
func (*CheckPassWordInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CheckPassWordInfo) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *CheckPassWordInfo) GetEncryptedPassword() string {
	if m != nil {
		return m.EncryptedPassword
	}
	return ""
}

type CheckResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success" xml:"success" form:"success"`
}

func (m *CheckResponse) Reset()                    { *m = CheckResponse{} }
func (m *CheckResponse) String() string            { return proto.CompactTextString(m) }
func (*CheckResponse) ProtoMessage()               {}
func (*CheckResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CheckResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type PageInfo struct {
	Pn    uint32 `protobuf:"varint,1,opt,name=pn" json:"pn" xml:"pn" form:"pn"`
	PSize uint32 `protobuf:"varint,2,opt,name=pSize" json:"pSize" xml:"pSize" form:"pSize"`
}

func (m *PageInfo) Reset()                    { *m = PageInfo{} }
func (m *PageInfo) String() string            { return proto.CompactTextString(m) }
func (*PageInfo) ProtoMessage()               {}
func (*PageInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PageInfo) GetPn() uint32 {
	if m != nil {
		return m.Pn
	}
	return 0
}

func (m *PageInfo) GetPSize() uint32 {
	if m != nil {
		return m.PSize
	}
	return 0
}

type MobileRequest struct {
	Mobile string `protobuf:"bytes,1,opt,name=mobile" json:"mobile" xml:"mobile" form:"mobile"`
}

func (m *MobileRequest) Reset()                    { *m = MobileRequest{} }
func (m *MobileRequest) String() string            { return proto.CompactTextString(m) }
func (*MobileRequest) ProtoMessage()               {}
func (*MobileRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *MobileRequest) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

type IdRequest struct {
	Id uint32 `protobuf:"varint,1,opt,name=id" json:"id" xml:"id" form:"id"`
}

func (m *IdRequest) Reset()                    { *m = IdRequest{} }
func (m *IdRequest) String() string            { return proto.CompactTextString(m) }
func (*IdRequest) ProtoMessage()               {}
func (*IdRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *IdRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type UserInfoResponse struct {
	Id       int32  `protobuf:"varint,1,opt,name=id" json:"id" xml:"id" form:"id"`
	PassWord string `protobuf:"bytes,2,opt,name=passWord" json:"passWord" xml:"passWord" form:"passWord"`
	Mobile   string `protobuf:"bytes,3,opt,name=mobile" json:"mobile" xml:"mobile" form:"mobile"`
	NickName string `protobuf:"bytes,4,opt,name=nickName" json:"nickName" xml:"nickName" form:"nickName"`
	BirthDay uint64 `protobuf:"varint,5,opt,name=birthDay" json:"birthDay" xml:"birthDay" form:"birthDay"`
	Gender   string `protobuf:"bytes,6,opt,name=gender" json:"gender" xml:"gender" form:"gender"`
	Role     int32  `protobuf:"varint,7,opt,name=role" json:"role" xml:"role" form:"role"`
}

func (m *UserInfoResponse) Reset()                    { *m = UserInfoResponse{} }
func (m *UserInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*UserInfoResponse) ProtoMessage()               {}
func (*UserInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *UserInfoResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserInfoResponse) GetPassWord() string {
	if m != nil {
		return m.PassWord
	}
	return ""
}

func (m *UserInfoResponse) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *UserInfoResponse) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *UserInfoResponse) GetBirthDay() uint64 {
	if m != nil {
		return m.BirthDay
	}
	return 0
}

func (m *UserInfoResponse) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *UserInfoResponse) GetRole() int32 {
	if m != nil {
		return m.Role
	}
	return 0
}

type UserListResponse struct {
	Total int32               `protobuf:"varint,1,opt,name=total" json:"total" xml:"total" form:"total"`
	Data  []*UserInfoResponse `protobuf:"bytes,2,rep,name=data" json:"data" xml:"data" form:"data"`
}

func (m *UserListResponse) Reset()                    { *m = UserListResponse{} }
func (m *UserListResponse) String() string            { return proto.CompactTextString(m) }
func (*UserListResponse) ProtoMessage()               {}
func (*UserListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *UserListResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *UserListResponse) GetData() []*UserInfoResponse {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateUserInfo struct {
	NickName string `protobuf:"bytes,1,opt,name=nickName" json:"nickName" xml:"nickName" form:"nickName"`
	PassWord string `protobuf:"bytes,2,opt,name=passWord" json:"passWord" xml:"passWord" form:"passWord"`
	Mobile   string `protobuf:"bytes,3,opt,name=mobile" json:"mobile" xml:"mobile" form:"mobile"`
}

func (m *CreateUserInfo) Reset()                    { *m = CreateUserInfo{} }
func (m *CreateUserInfo) String() string            { return proto.CompactTextString(m) }
func (*CreateUserInfo) ProtoMessage()               {}
func (*CreateUserInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *CreateUserInfo) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *CreateUserInfo) GetPassWord() string {
	if m != nil {
		return m.PassWord
	}
	return ""
}

func (m *CreateUserInfo) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

type UpdateUserInfo struct {
	Id       int32  `protobuf:"varint,1,opt,name=id" json:"id" xml:"id" form:"id"`
	NickName string `protobuf:"bytes,2,opt,name=nickName" json:"nickName" xml:"nickName" form:"nickName"`
	Gender   string `protobuf:"bytes,3,opt,name=gender" json:"gender" xml:"gender" form:"gender"`
	BirthDay uint64 `protobuf:"varint,4,opt,name=birthDay" json:"birthDay" xml:"birthDay" form:"birthDay"`
}

func (m *UpdateUserInfo) Reset()                    { *m = UpdateUserInfo{} }
func (m *UpdateUserInfo) String() string            { return proto.CompactTextString(m) }
func (*UpdateUserInfo) ProtoMessage()               {}
func (*UpdateUserInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *UpdateUserInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateUserInfo) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *UpdateUserInfo) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *UpdateUserInfo) GetBirthDay() uint64 {
	if m != nil {
		return m.BirthDay
	}
	return 0
}

func init() {
	proto.RegisterType((*CheckPassWordInfo)(nil), "CheckPassWordInfo")
	proto.RegisterType((*CheckResponse)(nil), "CheckResponse")
	proto.RegisterType((*PageInfo)(nil), "PageInfo")
	proto.RegisterType((*MobileRequest)(nil), "MobileRequest")
	proto.RegisterType((*IdRequest)(nil), "IdRequest")
	proto.RegisterType((*UserInfoResponse)(nil), "UserInfoResponse")
	proto.RegisterType((*UserListResponse)(nil), "UserListResponse")
	proto.RegisterType((*CreateUserInfo)(nil), "CreateUserInfo")
	proto.RegisterType((*UpdateUserInfo)(nil), "UpdateUserInfo")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for User service

type UserClient interface {
	GetUserList(ctx context.Context, in *PageInfo, opts ...grpc.CallOption) (*UserListResponse, error)
	GetUserByMobile(ctx context.Context, in *MobileRequest, opts ...grpc.CallOption) (*UserInfoResponse, error)
	GetUserById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*UserInfoResponse, error)
	CreateUser(ctx context.Context, in *CreateUserInfo, opts ...grpc.CallOption) (*UserInfoResponse, error)
	//      rpc UpdateUser(UpdateUserInfo) returns(UserInfoResponse);//更新用户
	UpdateUser(ctx context.Context, in *UpdateUserInfo, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	CheckPassWord(ctx context.Context, in *CheckPassWordInfo, opts ...grpc.CallOption) (*CheckResponse, error)
}

type userClient struct {
	cc *grpc.ClientConn
}

func NewUserClient(cc *grpc.ClientConn) UserClient {
	return &userClient{cc}
}

func (c *userClient) GetUserList(ctx context.Context, in *PageInfo, opts ...grpc.CallOption) (*UserListResponse, error) {
	out := new(UserListResponse)
	err := grpc.Invoke(ctx, "/User/GetUserList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) GetUserByMobile(ctx context.Context, in *MobileRequest, opts ...grpc.CallOption) (*UserInfoResponse, error) {
	out := new(UserInfoResponse)
	err := grpc.Invoke(ctx, "/User/GetUserByMobile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) GetUserById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*UserInfoResponse, error) {
	out := new(UserInfoResponse)
	err := grpc.Invoke(ctx, "/User/GetUserById", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) CreateUser(ctx context.Context, in *CreateUserInfo, opts ...grpc.CallOption) (*UserInfoResponse, error) {
	out := new(UserInfoResponse)
	err := grpc.Invoke(ctx, "/User/CreateUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) UpdateUser(ctx context.Context, in *UpdateUserInfo, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/User/UpdateUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) CheckPassWord(ctx context.Context, in *CheckPassWordInfo, opts ...grpc.CallOption) (*CheckResponse, error) {
	out := new(CheckResponse)
	err := grpc.Invoke(ctx, "/User/CheckPassWord", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for User service

type UserServer interface {
	GetUserList(context.Context, *PageInfo) (*UserListResponse, error)
	GetUserByMobile(context.Context, *MobileRequest) (*UserInfoResponse, error)
	GetUserById(context.Context, *IdRequest) (*UserInfoResponse, error)
	CreateUser(context.Context, *CreateUserInfo) (*UserInfoResponse, error)
	//      rpc UpdateUser(UpdateUserInfo) returns(UserInfoResponse);//更新用户
	UpdateUser(context.Context, *UpdateUserInfo) (*google_protobuf.Empty, error)
	CheckPassWord(context.Context, *CheckPassWordInfo) (*CheckResponse, error)
}

func RegisterUserServer(s *grpc.Server, srv UserServer) {
	s.RegisterService(&_User_serviceDesc, srv)
}

func _User_GetUserList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PageInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).GetUserList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/User/GetUserList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).GetUserList(ctx, req.(*PageInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_GetUserByMobile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MobileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).GetUserByMobile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/User/GetUserByMobile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).GetUserByMobile(ctx, req.(*MobileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_GetUserById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).GetUserById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/User/GetUserById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).GetUserById(ctx, req.(*IdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/User/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).CreateUser(ctx, req.(*CreateUserInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/User/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).UpdateUser(ctx, req.(*UpdateUserInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_CheckPassWord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckPassWordInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).CheckPassWord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/User/CheckPassWord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).CheckPassWord(ctx, req.(*CheckPassWordInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _User_serviceDesc = grpc.ServiceDesc{
	ServiceName: "User",
	HandlerType: (*UserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserList",
			Handler:    _User_GetUserList_Handler,
		},
		{
			MethodName: "GetUserByMobile",
			Handler:    _User_GetUserByMobile_Handler,
		},
		{
			MethodName: "GetUserById",
			Handler:    _User_GetUserById_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _User_CreateUser_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _User_UpdateUser_Handler,
		},
		{
			MethodName: "CheckPassWord",
			Handler:    _User_CheckPassWord_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}

func init() { proto.RegisterFile("user.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 508 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0x5f, 0x6b, 0xdb, 0x30,
	0x14, 0xc5, 0x89, 0xeb, 0xfc, 0xbb, 0x25, 0xce, 0x22, 0x4a, 0x31, 0xee, 0x4b, 0x30, 0x8c, 0x65,
	0xac, 0xa8, 0xa5, 0xdd, 0x9e, 0xf6, 0x96, 0x6e, 0x8c, 0xc0, 0xfe, 0x04, 0x8f, 0x52, 0x18, 0x0c,
	0xe6, 0x44, 0xb7, 0xa9, 0x69, 0x62, 0x69, 0x92, 0xc2, 0xc8, 0xbe, 0xd7, 0x5e, 0xf6, 0xe9, 0x86,
	0xa5, 0xc8, 0x8e, 0x9b, 0xbc, 0xec, 0x29, 0x39, 0xbe, 0x47, 0xf7, 0x5c, 0xfd, 0xd0, 0x05, 0x58,
	0x2b, 0x94, 0x54, 0x48, 0xae, 0x79, 0x74, 0xb6, 0xe0, 0x7c, 0xb1, 0xc4, 0x0b, 0xa3, 0x66, 0xeb,
	0xfb, 0x0b, 0x5c, 0x09, 0xbd, 0xb1, 0xc5, 0xf8, 0x3b, 0x0c, 0x6e, 0x1e, 0x70, 0xfe, 0x38, 0x4d,
	0x95, 0xba, 0xe3, 0x92, 0x4d, 0xf2, 0x7b, 0x4e, 0x22, 0xe8, 0x88, 0x54, 0xa9, 0x5f, 0x5c, 0xb2,
	0xb0, 0x31, 0x6c, 0x8c, 0xba, 0x49, 0xa9, 0xc9, 0x39, 0x0c, 0x30, 0x9f, 0xcb, 0x8d, 0xd0, 0xc8,
	0xa6, 0xce, 0xe4, 0x19, 0xd3, 0x7e, 0x21, 0x7e, 0x09, 0x3d, 0xd3, 0x3e, 0x41, 0x25, 0x78, 0xae,
	0x90, 0x84, 0xd0, 0x56, 0xeb, 0xf9, 0x1c, 0x95, 0x32, 0x9d, 0x3b, 0x89, 0x93, 0xf1, 0x25, 0x74,
	0xa6, 0xe9, 0x02, 0xcd, 0x00, 0x01, 0x78, 0x22, 0x37, 0x86, 0x5e, 0xe2, 0x89, 0x9c, 0x9c, 0x40,
	0x53, 0x7c, 0xcd, 0x7e, 0xa3, 0x09, 0xea, 0x25, 0x56, 0xc4, 0x2f, 0xa0, 0xf7, 0x89, 0xcf, 0xb2,
	0x25, 0x26, 0xf8, 0x73, 0x8d, 0x4a, 0x93, 0x53, 0x68, 0xad, 0xcc, 0x87, 0xed, 0xd4, 0x5b, 0x15,
	0x9f, 0x41, 0x77, 0xc2, 0x9c, 0x29, 0x00, 0x2f, 0x63, 0xae, 0x77, 0xc6, 0xe2, 0xbf, 0x0d, 0x78,
	0x76, 0xab, 0x50, 0x16, 0xc1, 0xe5, 0x98, 0x95, 0xa9, 0x59, 0x98, 0x1c, 0x91, 0xbb, 0xea, 0xb2,
	0xa5, 0xde, 0x49, 0x3d, 0xda, 0x4d, 0x2d, 0xce, 0xe4, 0xd9, 0xfc, 0xf1, 0x73, 0xba, 0xc2, 0xd0,
	0xb7, 0x67, 0x9c, 0x2e, 0x6a, 0xb3, 0x4c, 0xea, 0x87, 0x77, 0xe9, 0x26, 0x6c, 0x0e, 0x1b, 0x23,
	0x3f, 0x29, 0x75, 0xd1, 0x6f, 0x81, 0x39, 0x43, 0x19, 0xb6, 0x6c, 0x3f, 0xab, 0x08, 0x01, 0x5f,
	0xf2, 0x25, 0x86, 0x6d, 0x33, 0x95, 0xf9, 0x1f, 0x7f, 0xb1, 0xb3, 0x7f, 0xcc, 0x94, 0x2e, 0x67,
	0x3f, 0x81, 0xa6, 0xe6, 0x3a, 0x5d, 0x6e, 0xc7, 0xb7, 0x82, 0x3c, 0x07, 0x9f, 0xa5, 0x3a, 0x0d,
	0xbd, 0xe1, 0xd1, 0xe8, 0xf8, 0x6a, 0x40, 0x9f, 0x5e, 0x39, 0x31, 0xe5, 0xf8, 0x07, 0x04, 0x37,
	0x12, 0x53, 0x8d, 0xae, 0x5e, 0xbb, 0x46, 0x63, 0xff, 0x1a, 0xff, 0x8b, 0x25, 0x16, 0x10, 0xdc,
	0x0a, 0xb6, 0x9b, 0x70, 0x00, 0x76, 0x99, 0xe8, 0x3d, 0x49, 0xac, 0xe0, 0x1c, 0xd5, 0xe0, 0xec,
	0x02, 0xf5, 0xeb, 0x40, 0xaf, 0xfe, 0x78, 0xe0, 0x17, 0x61, 0xe4, 0x15, 0x1c, 0x7f, 0x40, 0xed,
	0x80, 0x91, 0x2e, 0x75, 0x0f, 0x2e, 0xb2, 0x3c, 0x6a, 0x18, 0x5f, 0x43, 0x7f, 0x6b, 0x1e, 0x6f,
	0xec, 0x33, 0x23, 0x01, 0xad, 0xbd, 0xb7, 0x68, 0x9f, 0x22, 0x39, 0x2f, 0x23, 0xc6, 0x9b, 0x09,
	0x23, 0x40, 0xcb, 0x87, 0x77, 0xc8, 0x7d, 0x09, 0x50, 0xd1, 0x26, 0x7d, 0x5a, 0x47, 0x7f, 0xe8,
	0xc4, 0x1b, 0x80, 0x8a, 0x1e, 0xe9, 0xd3, 0x3a, 0xca, 0xe8, 0x94, 0xda, 0x65, 0xa7, 0x6e, 0xd9,
	0xe9, 0xfb, 0x62, 0xd9, 0xc9, 0xf5, 0x76, 0x0f, 0xdd, 0x9a, 0x13, 0x42, 0xf7, 0xd6, 0x3e, 0x0a,
	0x68, 0x6d, 0x57, 0xc7, 0xdd, 0x6f, 0x6d, 0xfa, 0xd6, 0x36, 0x6a, 0x99, 0x9f, 0xeb, 0x7f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x0c, 0xd2, 0x75, 0xdd, 0x58, 0x04, 0x00, 0x00,
}
